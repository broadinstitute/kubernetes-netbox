repositories:
  - name: netbox
    url: https://charts.netbox.oss.netboxlabs.com/

helmDefaults:
  kubeContext: gke_bits-gke-clusters_us-east4_gke-autopilot-01-prod

environments:
  default:
    values:
      - default.yaml
      - prod.yaml
  dev:
    values:
      - default.yaml
      - dev.yaml
  local:
    values:
      - default.yaml
      - dev.yaml
      - local.yaml

---

#          annotations:
#            kubernetes.io/ingress.class: "gce"
#            networking.gke.io/managed-certificates: netbox-hjf
#          tls:
#            - hosts:
#                - "netbox-hjf.broadinstitute.org"

releases:
  - name: netbox-{{ .Values.Env }}
    # NOTE: by defualt, in our installation there is a one-to-one mapping between 
    #   namespace name and Google Project. TODO: add logic to allow override
    namespace: {{ .Values.Google_Project }}
    chart: netbox/netbox
    version: 6.0.33
    values:
      # to debug database connections
      - extraEnvs:
          - name: DB_WAIT_DEBUG
            value: "1"
      - image:
          tag: "v3.4.10"
      - ingress:
          enabled: false
          className: "gce"
          hostname: "netbox{{ if ne .Values.Env "prod" }}-{{ .Values.Env }}{{ end }}.broadinstitute.org"
          hosts:
            - host: "netbox{{ if ne .Values.Env "prod" }}-{{ .Values.Env }}{{ end }}.broadinstitute.org"
              paths:
                - "/"
      - netbox:
          allowedHosts:
            - "netbox{{ if ne .Values.Env "prod" }}-{{ .Values.Env }}{{ end }}.broadinstitute.org"
      - serviceAccount:
          annotations:
            iam.gke.io/gcp-service-account: netbox-{{ .Values.Env }}@{{ .Values.Google_Project }}.iam.gserviceaccount.com
#            iam.gke.io/gcp-service-account: netbox-{{ .Values.Env }}@broad-netbox-dev.iam.gserviceaccount.com
      - worker:
          sidecars:
            - name: cloud-sql-proxy
              image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.16.0
              imagePullPolicy: Always
              ports:
                - name: database
                  containerPort: 5432
              args:
                # Enable structured logging with LogEntry format:
                - "--structured-logs"
                # Replace DB_PORT with the port the proxy should listen on
                - "--port=5432"
                # Use auto iam authn to authenticate with the Cloud SQL instance
                - "--auto-iam-authn"
                - "{{ .Values.Google_Project }}:us-central1:netbox-{{ .Values.Env }}"
           # You should use resource requests/limits as a best practice to prevent
           # pods from consuming too many resources and affecting the execution of
           # other pods. You should adjust the following values based on what your
           # application needs. For details, see
           # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
              resources:
                limits:
                  cpu: "1"
                  memory: "2Gi"
                requests:
                  # The proxy's CPU use scales linearly with the amount of IO between
                  # the database and the application. Adjust this value based on your
                  # application's requirements.
                  cpu: ".5"
                  # The proxy's memory use scales linearly with the number of active
                  # connections. Fewer open connections will use less memory. Adjust
                  # this value based on your application's requirements.
                  memory: "512Mi"
              securityContext:
              # The default Cloud SQL Auth Proxy image runs as the
              # "nonroot" user and group (uid: 65532) by default.
                runAsNonRoot: true
      - sidecars:
          - name: cloud-sql-proxy
            image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.16.0
            imagePullPolicy: Always
            ports:
              - name: database
                containerPort: 5432
            args:
              # Enable structured logging with LogEntry format:
              - "--structured-logs"
              # Replace DB_PORT with the port the proxy should listen on
              - "--port=5432"
              # Use auto iam authn to authenticate with the Cloud SQL instance
              - "--auto-iam-authn"
              - "{{ .Values.Google_Project}}:us-central1:netbox-{{ .Values.Env }}"
         # You should use resource requests/limits as a best practice to prevent
         # pods from consuming too many resources and affecting the execution of
         # other pods. You should adjust the following values based on what your
         # application needs. For details, see
         # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
            resources:
              limits:
                cpu: "1"
                memory: "2Gi"
              requests:
                # The proxy's CPU use scales linearly with the amount of IO between
                # the database and the application. Adjust this value based on your
                # application's requirements.
                cpu: ".5"
                # The proxy's memory use scales linearly with the number of active
                # connections. Fewer open connections will use less memory. Adjust
                # this value based on your application's requirements.
                memory: "512Mi"
            securityContext:
            # The default Cloud SQL Auth Proxy image runs as the
            # "nonroot" user and group (uid: 65532) by default.
              runAsNonRoot: true
      - postgresql:
          enabled: false
      - externalDatabase:
          host: localhost
          port: 5432
          database: netbox
          username: netbox
          password: ref+gcpsecrets://{{ .Values.Google_Project }}/netbox_{{ .Values.Env }}_netbox_db_password?version=2
